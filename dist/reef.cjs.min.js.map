{"version":3,"file":"reef.cjs.min.js","sources":["../src/components/utilities.js","../src/components/signal.js","../src/components/store.js","../src/components/render.js","../src/components/focus.js","../src/components/component.js"],"sourcesContent":["/**\r\n * Emit a custom reefevent\r\n * @param  {String} type   The event type\r\n * @param  {*}      detail Any details to pass along with the event\r\n * @param  {Node}   elem   The element to emit the event on\r\n */\r\nfunction emit (type, detail, elem = document) {\r\n\r\n\t// Create a new event\r\n\tlet event = new CustomEvent(`reef:${type}`, {\r\n\t\tbubbles: true,\r\n\t\tcancelable: true,\r\n\t\tdetail: detail\r\n\t});\r\n\r\n\t// Dispatch the event\r\n\treturn elem.dispatchEvent(event);\r\n\r\n}\r\n\r\n/**\r\n * Get the element from the UI\r\n * @param  {String|Node} elem The element or selector string\r\n * @return {Node}             The element\r\n */\r\nfunction getElem (elem) {\r\n\treturn typeof elem === 'string' ? document.querySelector(elem) : elem;\r\n}\r\n\r\n/**\r\n * Get an object's type\r\n * @param  {*}      obj The object\r\n * @return {String}     The type\r\n */\r\nfunction getType (obj) {\r\n\treturn Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\r\n}\r\n\r\n\r\nexport {emit, getElem, getType};","import {emit, getType} from './utilities.js';\r\n\r\n\r\n/**\r\n * Create a Proxy handler object\r\n * @param  {String} name The custom event namespace\r\n * @param  {Object} data The data object\r\n * @return {Object}      The handler object\r\n */\r\nfunction handler (name, data) {\r\n\tlet type = 'signal' + (name ? `-${name}` : '');\r\n\treturn {\r\n\t\tget (obj, prop) {\r\n\t\t\tif (prop === '_isSignal') return true;\r\n\t\t\tif (['object', 'array'].includes(getType(obj[prop])) && !obj[prop]._isSignal) {\r\n\t\t\t\tobj[prop] = new Proxy(obj[prop], handler(name, data));\r\n\t\t\t}\r\n\t\t\treturn obj[prop];\r\n\t\t},\r\n\t\tset (obj, prop, value) {\r\n\t\t\tif (obj[prop] === value) return true;\r\n\t\t\tobj[prop] = value;\r\n\t\t\temit(type, {prop, value, action: 'set'});\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\tdeleteProperty (obj, prop) {\r\n\t\t\tdelete obj[prop];\r\n\t\t\temit(type, {prop, value: obj[prop], action: 'delete'});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Create a new signal\r\n * @param  {Object} data The data object\r\n * @param  {String} name The custom event namespace\r\n * @return {Proxy}       The signal Proxy\r\n */\r\nfunction signal (data = {}, name = '') {\r\n\tdata = ['array', 'object'].includes(getType(data)) ? data : {value: data};\r\n\treturn new Proxy(data, handler(name, data));\r\n}\r\n\r\n\r\nexport default signal;","import {emit} from './utilities.js';\r\n\r\n\r\n/**\r\n * Store Class\r\n */\r\nclass Store {\r\n\r\n\t/**\r\n\t * The constructor object\r\n\t * @param  {Object} data    The data object\r\n\t * @param  {Object} actions The store functions\r\n\t * @param  {String} name    The custom event namespace for the signal\r\n\t */\r\n\tconstructor (data, actions, name = '') {\r\n\r\n\t\t// Get signal type\r\n\t\tlet type = 'signal' + (name ? `-${name}` : '');\r\n\r\n\t\t// Create data property setter/getter\r\n\t\tObject.defineProperties(this, {\r\n\t\t\tvalue: {\r\n\t\t\t\tget () {\r\n\t\t\t\t\treturn structuredClone(data);\r\n\t\t\t\t},\r\n\t\t\t\tset () {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Add store functions\r\n\t\tfor (let fn in actions) {\r\n\t\t\tif (typeof actions[fn] !== 'function') continue;\r\n\t\t\tthis[fn] = function (...args) {\r\n\t\t\t\tactions[fn](data, ...args);\r\n\t\t\t\temit(type, data);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Create a new store\r\n * @param  {Object} data    The data object\r\n * @param  {Object} setters The store functions\r\n * @param  {String} name    The custom event namespace for the signal\r\n * @return {Proxy}          The Store instance\r\n */\r\nfunction store (data = {}, setters = {}, name = '') {\r\n\treturn new Store(data, setters, name);\r\n}\r\n\r\n\r\nexport default store;","import {emit, getElem} from './utilities.js';\r\n\r\n\r\n// Form fields and attributes that can be modified by users\r\n// They also have implicit values that make it hard to know if they were changed by the user or developer\r\nlet formFields = ['input', 'option', 'textarea'];\r\nlet formAtts = ['value', 'checked', 'selected'];\r\nlet formAttsNoVal = ['checked', 'selected'];\r\n\r\n/**\r\n * Convert a template string into HTML DOM nodes\r\n * @param  {String}  str The template string\r\n * @return {Element}     The template HTML\r\n */\r\nfunction stringToHTML (str) {\r\n\r\n    // Create document\r\n    let parser = new DOMParser();\r\n    let doc = parser.parseFromString(str, 'text/html');\r\n\r\n    // If there are items in the head, move them to the body\r\n    if (doc.head && doc.head.childNodes.length) {\r\n        Array.from(doc.head.childNodes).reverse().forEach(function (node) {\r\n            doc.body.insertBefore(node, doc.body.firstChild);\r\n        });\r\n    }\r\n\r\n    return doc.body || document.createElement('body');\r\n\r\n}\r\n\r\n/**\r\n * Check if an attribute string has a stringified falsy value\r\n * @param  {String}  str The string\r\n * @return {Boolean}     If true, value is falsy (yea, I know, that's a little confusing)\r\n */\r\nfunction isFalsy (str) {\r\n\treturn ['false', 'null', 'undefined', '0', '-0', 'NaN', '0n', '-0n'].includes(str);\r\n}\r\n\r\n/**\r\n * Add an event listener to an element\r\n * @param  {Element} elem   The element to delegate events on\r\n * @param  {String}  event  The event name\r\n * @param  {String}  val    The function to run for the event\r\n * @param  {Object}  events The allowed event functions\r\n */\r\nfunction listen (elem, event, val, events) {\r\n\r\n\t// Only run if there are events\r\n\tif (!event.startsWith('on') || !events) return;\r\n\r\n\t// If there's already a listener for this event, skip\r\n\tif (!!elem[event]) return;\r\n\r\n\t// Get the event listener ID\r\n\tlet fnName = val.split('(')[0];\r\n\tlet listener = events[fnName];\r\n\tif (!listener) return;\r\n\r\n\t// Start listening\r\n\telem[event] = listener;\r\n\r\n}\r\n\r\n/**\r\n * Check if attribute should be skipped (sanitize properties)\r\n * @param  {String}  name   The attribute name\r\n * @param  {String}  value  The attribute value\r\n * @return {Boolean}        If true, skip the attribute\r\n */\r\nfunction skipAttribute (name, value) {\r\n\tlet val = value.replace(/\\s+/g, '').toLowerCase();\r\n\tif (['src', 'href', 'xlink:href'].includes(name)) {\r\n\t\tif (val.includes('javascript:') || val.includes('data:text/html')) return true;\r\n\t}\r\n\tif (name.startsWith('on') || name.startsWith('@on') || name.startsWith('#on')) return true;\r\n}\r\n\r\n/**\r\n * Add an attribute to an element\r\n * @param {Node}   elem   The element\r\n * @param {String} att    The attribute\r\n * @param {String} val    The value\r\n * @param {Object} events The allowed event functions\r\n */\r\nfunction addAttribute (elem, att, val, events) {\r\n\r\n\t// If there's an event object, add listener\r\n\tlisten(elem, att, val, events);\r\n\r\n\t// Sanitize dangerous attributes\r\n\tif (skipAttribute(att, val)) return;\r\n\r\n\t// If it's a form attribute, set the property directly\r\n\tif (formAtts.includes(att)) {\r\n\t\telem[att] = att === 'value' ? val : ' ';\r\n\t}\r\n\r\n\t// Update the attribute\r\n\telem.setAttribute(att, val);\r\n\r\n}\r\n\r\n/**\r\n * Remove an attribute from an element\r\n * @param {Node}   elem The element\r\n * @param {String} att  The attribute\r\n */\r\nfunction removeAttribute (elem, att) {\r\n\r\n\t// If it's a form attribute, remove the property directly\r\n\tif (formAtts.includes(att)) {\r\n\t\telem[att] = '';\r\n\t}\r\n\r\n\t// Remove the attribute\r\n\telem.removeAttribute(att);\r\n\r\n}\r\n\r\n/**\r\n * Compare the existing node attributes to the template node attributes and make updates\r\n * @param  {Node}   template The new template\r\n * @param  {Node}   existing The existing DOM node\r\n * @param  {Object} events   The allowed event functions\r\n */\r\nfunction diffAttributes (template, existing, events) {\r\n\r\n\t// If the node is not an element, bail\r\n\tif (template.nodeType !== 1) return;\r\n\r\n\t// Get attributes for the template and existing DOM\r\n\tlet templateAtts = template.attributes;\r\n\tlet existingAtts = existing.attributes;\r\n\r\n\t// Add and update attributes from the template into the DOM\r\n\tfor (let {name, value} of templateAtts) {\r\n\r\n\t\t// Skip [#*] attributes\r\n\t\tif (name.startsWith('#')) continue;\r\n\r\n\t\t// Skip user-editable form field attributes\r\n\t\tif (formAtts.includes(name) && formFields.includes(template.tagName.toLowerCase())) continue;\r\n\r\n\t\t// Convert [@*] names to their real attribute name\r\n\t\tlet attName = name.startsWith('@') ? name.slice(1) : name;\r\n\r\n\t\t// If its a no-value property and it's falsy remove it\r\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) {\r\n\t\t\tremoveAttribute(existing, attName);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// Otherwise, add the attribute\r\n\t\taddAttribute(existing, attName, value, events);\r\n\r\n\t}\r\n\r\n\t// Remove attributes from the DOM that shouldn't be there\r\n\tfor (let {name, value} of existingAtts) {\r\n\r\n\t\t// If the attribute exists in the template, skip it\r\n\t\tif (templateAtts[name]) continue;\r\n\r\n\t\t// Skip user-editable form field attributes\r\n\t\tif (formAtts.includes(name) && formFields.includes(existing.tagName.toLowerCase())) continue;\r\n\r\n\t\t// Otherwise, remove it\r\n\t\tremoveAttribute(existing, name);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Add default attributes to a newly created element\r\n * @param  {Node}   elem   The element\r\n * @param  {Object} events The allowed event functions\r\n */\r\nfunction addDefaultAtts (elem, events) {\r\n\r\n\t// Only run on elements\r\n\tif (elem.nodeType !== 1) return;\r\n\r\n\t// Remove [@*] and [#*] attributes and replace them with the plain attributes\r\n\t// Remove unsafe HTML attributes\r\n\tfor (let {name, value} of elem.attributes) {\r\n\r\n\t\t// If the attribute should be skipped, remove it\r\n\t\tif (skipAttribute(name, value)) {\r\n\t\t\tremoveAttribute(elem, name);\r\n\t\t\tlisten(elem, name, value, events);\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// If the attribute isn't a [@*] or [#*], skip it\r\n\t\tif (!name.startsWith('@') && !name.startsWith('#')) continue;\r\n\r\n\t\t// Get the plain attribute name\r\n\t\tlet attName = name.slice(1);\r\n\r\n\t\t// Remove the [@*] or [#*] attribute\r\n\t\tremoveAttribute(elem, name);\r\n\r\n\t\t// If it's a no-value attribute and its falsy, skip it\r\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) continue;\r\n\r\n\t\t// Add the plain attribute\r\n\t\taddAttribute(elem, attName, value, events);\r\n\r\n\t}\r\n\r\n\t// If there are child elems, recursively add defaults to them\r\n\tif (elem.childNodes) {\r\n\t\tfor (let node of elem.childNodes) {\r\n\t\t\taddDefaultAtts(node, events);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Get the content from a node\r\n * @param  {Node}   node The node\r\n * @return {String}      The content\r\n */\r\nfunction getNodeContent (node) {\r\n\treturn node.childNodes && node.childNodes.length ? null : node.textContent;\r\n}\r\n\r\n/**\r\n * Check if two nodes are different\r\n * @param  {Node}    node1 The first node\r\n * @param  {Node}    node2 The second node\r\n * @return {Boolean}       If true, they're not the same node\r\n */\r\nfunction isDifferentNode (node1, node2) {\r\n\treturn (\r\n\t\t(typeof node1.nodeType === 'number' && node1.nodeType !== node2.nodeType) ||\r\n\t\t(typeof node1.tagName === 'string' && node1.tagName !== node2.tagName) ||\r\n\t\t(typeof node1.id === 'string' && !!node1.id && node1.id !== node2.id) ||\r\n\t\t('getAttribute' in node1 && 'getAttribute' in node2 && node1.getAttribute('key') !== node2.getAttribute('key')) ||\r\n\t\t(typeof node1.src === 'string' && !!node1.src && node1.src !== node2.src)\r\n\t);\r\n}\r\n\r\n/**\r\n * Check if the desired node is further ahead in the current DOM tree branch\r\n * @param  {Node}     node     The node to look for\r\n * @param  {NodeList} existing The existing nodes in the DOM\r\n * @return {Node}              The element from the DOM\r\n */\r\nfunction aheadInTree (node, existing) {\r\n\r\n\t// If the node isn't an element, bail\r\n\tif (node.nodeType !== 1) return;\r\n\r\n\t// Look for the ID or [key] attribute\r\n\tlet id = node.getAttribute('id');\r\n\tlet key = node.getAttribute('key');\r\n\tif (!id || !key) return;\r\n\r\n\t// Use the ID or [key] as the selector\r\n\tlet selector = id ? `#${id}` : `[key=\"${key}\"]`;\r\n\r\n\t// Look for the corresponding element in the DOM\r\n\treturn existing.querySelector(`:scope > ${selector}`);\r\n\r\n}\r\n\r\n/**\r\n * If there are extra elements in DOM, remove them\r\n * @param  {Array} existingNodes The existing DOM nodes\r\n * @param  {Array} templateNodes The template nodes\r\n */\r\nfunction trimExtraNodes (existingNodes, templateNodes) {\r\n\tlet extra = existingNodes.length - templateNodes.length;\r\n\tif (extra < 1)  return;\r\n\tfor (; extra > 0; extra--) {\r\n\t\texistingNodes[existingNodes.length - 1].remove();\r\n\t}\r\n}\r\n\r\n/**\r\n * Remove scripts from HTML\r\n * @param  {Node} elem The element to remove scripts from\r\n */\r\nfunction removeScripts (elem) {\r\n\tlet scripts = elem.querySelectorAll('script');\r\n\tfor (let script of scripts) {\r\n\t\tscript.remove();\r\n\t}\r\n}\r\n\r\n/**\r\n * Diff the existing DOM node versus the template\r\n * @param  {Array}  template The template HTML\r\n * @param  {Node}   existing The current DOM HTML\r\n * @param  {Object} events   The allowed event functions\r\n */\r\nfunction diff (template, existing, events) {\r\n\r\n\t// Get the nodes in the template and existing UI\r\n\tlet templateNodes = template.childNodes;\r\n\tlet existingNodes = existing.childNodes;\r\n\r\n\t// Don't inject scripts\r\n\tif (removeScripts(template)) return;\r\n\r\n\t// Loop through each node in the template and compare it to the matching element in the UI\r\n\ttemplateNodes.forEach(function (node, index) {\r\n\r\n\t\t// If there's no existing element, create and append\r\n\t\tif (!existingNodes[index]) {\r\n\t\t\tlet clone = node.cloneNode(true);\r\n\t\t\taddDefaultAtts(clone, events);\r\n\t\t\texisting.append(clone);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there is, but it's not the same node type...\r\n\t\tif (isDifferentNode(node, existingNodes[index])) {\r\n\r\n\t\t\t// Check if node exists further in the tree\r\n\t\t\tlet ahead = aheadInTree(node, existing);\r\n\r\n\t\t\t// If not, insert the new node before the current one\r\n\t\t\tif (!ahead) {\r\n\t\t\t\tlet clone = node.cloneNode(true);\r\n\t\t\t\taddDefaultAtts(clone, events);\r\n\t\t\t\texistingNodes[index].before(clone);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Otherwise, move existing node to the current spot\r\n\t\t\texistingNodes[index].before(ahead);\r\n\r\n\t\t}\r\n\r\n\t\t// Stop diffing if element should be ignored\r\n\t\tif ('hasAttribute' in node && node.hasAttribute('reef-ignore')) return;\r\n\r\n\t\t// If attributes should not be kept and they are different, update them\r\n\t\tif (!('hasAttribute' in node) || !node.hasAttribute('reef-keep')) diffAttributes(node, existingNodes[index], events);\r\n\r\n\t\t// Stop diffing if a native web component\r\n\t\tif (node.nodeName.includes('-')) return;\r\n\r\n\t\t// If content is different, update it\r\n\t\tlet templateContent = getNodeContent(node);\r\n\t\tif (templateContent && templateContent !== getNodeContent(existingNodes[index])) {\r\n\t\t\texistingNodes[index].textContent = templateContent;\r\n\t\t}\r\n\r\n\t\t// If there shouldn't be child nodes but there are, remove them\r\n\t\tif (!node.childNodes.length && existingNodes[index].childNodes.length) {\r\n\t\t\texistingNodes[index].innerHTML = '';\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If DOM is empty and shouldn't be, build it up\r\n\t\t// This uses a document fragment to minimize reflows\r\n\t\tif (!existingNodes[index].childNodes.length && node.childNodes.length) {\r\n\t\t\tlet fragment = document.createDocumentFragment();\r\n\t\t\tdiff(node, fragment, events);\r\n\t\t\texistingNodes[index].appendChild(fragment);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// If there are nodes within it, recursively diff those\r\n\t\tif (node.childNodes.length) {\r\n\t\t\tdiff(node, existingNodes[index], events);\r\n\t\t}\r\n\r\n\t});\r\n\r\n\t// If extra elements in DOM, remove them\r\n\ttrimExtraNodes(existingNodes, templateNodes);\r\n\r\n}\r\n\r\n/**\r\n * Render a template into the UI\r\n * @param  {Node|String} elem     The element or selector to render the template into\r\n * @param  {String}      template The template to render\r\n * @param  {Object}      events   The allowed event functions\r\n */\r\nfunction render (elem, template, events) {\r\n\tlet node = getElem(elem);\r\n\tlet html = stringToHTML(template);\r\n\tif (!emit('before-render', null, node)) return;\r\n\tdiff(html, node, events);\r\n\temit('render', null, node);\r\n}\r\n\r\n\r\nexport default render;","// Hold the selector for the element to focus on\r\nlet focusOn;\r\n\r\n/**\r\n * Set focus on the element\r\n * 1ms delay prevents odd bugs from browser-native focus shifts\r\n */\r\nfunction setFocus () {\r\n\tsetTimeout(function () {\r\n\r\n\t\t// Find target element in the DOM\r\n\t\tlet elem = document.querySelector(focusOn);\r\n\t\tfocusOn = null;\r\n\t\tif (!elem) return;\r\n\r\n\t\t// Try to focus element\r\n\t\telem.focus();\r\n\t\tif (document.activeElement === elem) return;\r\n\r\n\t\t// If element could not be focused, set a tabindex and try again\r\n\t\telem.setAttribute('tabindex', -1);\r\n\t\telem.focus();\r\n\r\n\t}, 1);\r\n}\r\n\r\n/**\r\n * Shift focus to trigger a screen reader announcement after content is loaded\r\n */\r\nfunction focus (selector) {\r\n\tif (!selector || typeof selector !== 'string') return;\r\n\tfocusOn = selector;\r\n\tdocument.addEventListener('reef:render', setFocus, {once: true});\r\n}\r\n\r\n\r\nexport default focus;","import render from './render.js';\r\nimport {emit, getElem} from './utilities.js';\r\n\r\n\r\n/**\r\n * Create the event handler function\r\n * @param {Class} instance The Component instance\r\n */\r\nfunction createHandler (instance) {\r\n\treturn function handler (event) {\r\n\t\tinstance.render();\r\n\t};\r\n}\r\n\r\n/**\r\n * Component Class\r\n */\r\nclass Component {\r\n\r\n\t/**\r\n\t * The constructor object\r\n\t * @param  {Node|String} elem            The element or selector to render the template into\r\n\t * @param  {Function}    template        The template function to run when the data updates\r\n\t * @param  {Object}      options         Additional options\r\n\t * @param  {Array}       options.signals The names of the signals to listen for\r\n\t * @param  {Object}      options.events  The allowed event functions\r\n\t */\r\n\tconstructor (elem, template, options) {\r\n\r\n\t\t// Create instance properties\r\n\t\tthis.elem = elem;\r\n\t\tthis.template = template;\r\n\t\tthis.signals = options.signals ? options.signals.map((signal) => `reef:signal-${signal}`) : ['reef:signal'];\r\n\t\tthis.events = options.events;\r\n\t\tthis.handler = createHandler(this);\r\n\t\tthis.debounce = null;\r\n\r\n\t\t// Init\r\n\t\tthis.start();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Start reactive data rendering\r\n\t */\r\n\tstart () {\r\n\t\tfor (let signal of this.signals) {\r\n\t\t\tdocument.addEventListener(signal, this.handler);\r\n\t\t}\r\n\t\tthis.render();\r\n\t\temit('start', null, getElem(this.elem));\r\n\t}\r\n\r\n\t/**\r\n\t * Stop reactive data rendering\r\n\t */\r\n\tstop () {\r\n\t\tfor (let signal of this.signals) {\r\n\t\t\tdocument.removeEventListener(signal, this.handler);\r\n\t\t}\r\n\t\temit('stop', null, getElem(this.elem));\r\n\t}\r\n\r\n\t/**\r\n\t * Render the UI\r\n\t */\r\n\trender () {\r\n\r\n\t\t// Cache instance\r\n\t\tlet self = this;\r\n\r\n\t\t// If there's a pending render, cancel it\r\n\t\tif (self.debounce) {\r\n\t\t\twindow.cancelAnimationFrame(self.debounce);\r\n\t\t}\r\n\r\n\t\t// Setup the new render to run at the next animation frame\r\n\t\tself.debounce = window.requestAnimationFrame(function () {\r\n\t\t\trender(self.elem, self.template(), self.events);\r\n\t\t});\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Create a new listener\r\n * @param  {Node|String} elem     The element or selector to render the template into\r\n * @param  {Function}    template The template function to run when the data updates\r\n * @param  {Object}      options  Additional options\r\n */\r\nfunction component (elem, template, options = {}) {\r\n\treturn new Component(elem, template, options);\r\n}\r\n\r\n\r\nexport default component;"],"names":["emit","type","detail","elem","document","event","CustomEvent","bubbles","cancelable","dispatchEvent","getElem","querySelector","getType","obj","Object","prototype","toString","call","slice","toLowerCase","handler","name","data","get","prop","includes","_isSignal","Proxy","set","value","action","deleteProperty","Store","constructor","actions","defineProperties","this","structuredClone","fn","args","focusOn","formFields","formAtts","formAttsNoVal","isFalsy","str","listen","val","events","startsWith","listener","split","skipAttribute","replace","addAttribute","att","setAttribute","removeAttribute","addDefaultAtts","nodeType","attributes","attName","childNodes","node","getNodeContent","length","textContent","diff","template","existing","templateNodes","existingNodes","scripts","querySelectorAll","script","remove","removeScripts","forEach","index","clone","cloneNode","append","node1","node2","tagName","id","getAttribute","src","ahead","key","selector","aheadInTree","before","hasAttribute","templateAtts","existingAtts","diffAttributes","nodeName","templateContent","fragment","createDocumentFragment","appendChild","innerHTML","extra","trimExtraNodes","render","html","doc","DOMParser","parseFromString","head","Array","from","reverse","body","insertBefore","firstChild","createElement","stringToHTML","Component","options","instance","signals","map","signal","debounce","start","addEventListener","stop","removeEventListener","self","window","cancelAnimationFrame","requestAnimationFrame","setFocus","setTimeout","focus","activeElement","once","setters"],"mappings":"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"}